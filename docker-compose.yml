version: "3.5"

volumes:
  web_data:
    name: "web_data"
services:
  vaued-api:
    image: shadinikalansooriya98/vauedtest:latest
    restart: unless-stopped
    container_name: vaued-api
    # image: vaued-flask-api
    ports:
      - "5000:5000"
    networks:
      vaued-network:
        ipv4_address: 10.10.10.10

  vaued-prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    container_name: vaued-prometheus
    ports:
      - 9090:9090
    volumes:
      - ./observability/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      vaued-network:
        ipv4_address: 10.10.10.11

  vaued-grafana:
    image: grafana/grafana:5.4.0
    restart: unless-stopped
    user: "472"
    container_name: vaued-grafana
    depends_on:
      - vaued-prometheus
    ports:
      - 3000:3000
    volumes:
      - web_data:/var/lib/grafana 
      - ./observability/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml  
    env_file:
      - ./observability/config.observability
    networks:
      vaued-network:
        ipv4_address: 10.10.10.12
  
  node-exporter:
    image: prom/node-exporter
    ports:
      - 9300:9300

    networks:
      vaued-network:
        ipv4_address: 10.10.10.13


  cadvisor:
    image: google/cadvisor:latest
    ports:
      - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      vaued-network:
        ipv4_address: 10.10.10.14

networks:
  vaued-network:
    name: vaued-network
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.10.10.0/24
